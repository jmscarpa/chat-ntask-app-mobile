workflows:
  android-production:
    name: React Native Android - Production
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      groups:
        - keystore_credentials
        - playstore_credentials
      vars:
        PACKAGE_NAME: 'chatntask.jmscarpa.com.br'
      node: 16.18.0
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: develop
          include: true
          source: true
    scripts:
      - name: Install yarn dependencies
        script: |
          yarn install
      - name: Set Android SDK location
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/android/local.properties"
      - name: Set up keystore
        script: |
          echo $CM_KEYSTORE | base64 --decode > $FCI_BUILD_DIR/android/app/$ANDROID_KEYSTORE_FILENAME
      - name: Build Android release
        script: |
          # Set environment variable so it can be used to increment build number in android/app/build.gradle
          # Note that tracks can be specified when retrieving latest build number from Google Play, for example:
          # export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks=alpha) + 1))
          export LATEST_GOOGLE_PLAY_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME") + 1))
          cd android && ./gradlew experimentalPlayRelease
    artifacts:
      - android/app/build/outputs/**/*.apk
      - android/app/build/outputs/**/*.aab
    publishing:
      email:
        recipients:
          - joao.scarpa@designa.com.br
        notify:
          success: true
          failure: true
      google_play:
        # See the following link for information regarding publishing to Google Play - https://docs.codemagic.io/publishing-yaml/distribution/#google-play
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: internal
  android-apk:
    name: React Native Android - Dev
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      groups:
        - keystore_credentials
        - playstore_credentials
      vars:
        PACKAGE_NAME: 'chatntask.jmscarpa.com.br'
      node: 16.18.0
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: develop
          include: true
          source: true
    scripts:
      - name: Install yarn dependencies
        script: |
          yarn install
      - name: Set Android SDK location
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/android/local.properties"
      - name: Set up keystore
        script: |
          echo $CM_KEYSTORE | base64 --decode > $FCI_BUILD_DIR/android/app/$ANDROID_KEYSTORE_FILENAME

      - name: Build Android release
        script: |
          yarn run e2e:android-build-debug
    artifacts:
      - android/app/build/outputs/**/*.apk
      - android/app/build/outputs/**/*.aab
  ios-production:
    name: React Native iOS - Production
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      groups:
        - appstore_credentials
      vars:
        XCODE_WORKSPACE: 'ChatNtask.xcworkspace'
        XCODE_SCHEME: 'Chat Ntask'
        BUNDLE_ID: 'chatntask.jmscarpa.com.br'
        APP_STORE_APP_ID: 6444013119
      node: 16.18.0
      xcode: 14.2
      cocoapods: default
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: develop
          include: true
          source: true
    scripts:
      - name: Install yarn dependencies
        script: |
          yarn install
      - name: Install CocoaPods dependencies
        script: |
          cd ios && npx pod-install
      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: |
          keychain initialize
      - name: Fetch signing files
        script: |
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
      - name: Use system default keychain
        script: |
          keychain add-certificates
      - name: Increment build number
        script: |
          #!/bin/sh
          set -e
          set -x
          cd $FCI_BUILD_DIR/ios
          agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles --warn-only
      - name: Build ipa for distribution
        script: |
          xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      email:
        recipients:
          - joao.scarpa@designa.com.br
        notify:
          success: true
          failure: false
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: false
  ios-internal:
    name: React Native iOS - Dev
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      groups:
        - appstore_credentials
      vars:
        XCODE_WORKSPACE: 'ChatNtask.xcworkspace'
        XCODE_SCHEME: 'Chat Ntask'
        BUNDLE_ID: 'chatntask.jmscarpa.com.br'
        APP_STORE_APP_ID: 6444013119
      node: 16.18.0
      xcode: 14.2
      cocoapods: default
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: develop
          include: true
          source: true
    scripts:
      - name: Install yarn dependencies
        script: |
          yarn install
      - name: Install CocoaPods dependencies
        script: |
          cd ios && npx pod-install
      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: |
          keychain initialize
      - name: Fetch signing files
        script: |
          app-store-connect fetch-signing-files "$BUNDLE_ID" --create 
      - name: Use system default keychain
        script: |
          keychain add-certificates
      - name: Increment build number
        script: |
          #!/bin/sh
          set -e
          set -x
          cd $FCI_BUILD_DIR/ios
          agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles --warn-only
      - name: Build ipa for distribution
        script: |
          xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"   --archive-flags="-destination 'generic/platform=iOS'"
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
